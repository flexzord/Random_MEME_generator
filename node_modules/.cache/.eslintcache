[{"/Users/alekseinesterov/WEB/Third/meme/MEME_generator/src/index.js":"1","/Users/alekseinesterov/WEB/Third/meme/MEME_generator/src/App.js":"2","/Users/alekseinesterov/WEB/Third/meme/MEME_generator/src/reportWebVitals.js":"3","/Users/alekseinesterov/WEB/Third/meme/MEME_generator/src/Components/Form.js":"4","/Users/alekseinesterov/WEB/Third/meme/MEME_generator/src/Components/Navbar.js":"5","/Users/alekseinesterov/WEB/Third/meme/MEME_generator/src/Components/Textarea.js":"6"},{"size":535,"mtime":1675851527870,"results":"7","hashOfConfig":"8"},{"size":226,"mtime":1677588036159,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1675851527872,"results":"10","hashOfConfig":"8"},{"size":1870,"mtime":1678104848807,"results":"11","hashOfConfig":"8"},{"size":235,"mtime":1675851923674,"results":"12","hashOfConfig":"8"},{"size":1709,"mtime":1677588604538,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wkwnl1",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/alekseinesterov/WEB/Third/meme/MEME_generator/src/index.js",[],[],"/Users/alekseinesterov/WEB/Third/meme/MEME_generator/src/App.js",[],[],"/Users/alekseinesterov/WEB/Third/meme/MEME_generator/src/reportWebVitals.js",[],[],"/Users/alekseinesterov/WEB/Third/meme/MEME_generator/src/Components/Form.js",["34"],[],"import React from \"react\"\nimport \"./Form.css\"\n\nexport default function Form(){\n\n    const [memes, setMemes] = React.useState([]);\n    \n    React.useEffect(()=>{\n        const fetchMemes = async ()=>{\n            const response = await fetch('https://api.imgflip.com/get_memes')\n            const data = await response.json()\n            setMemes(data.data.memes)\n        }\n        fetchMemes()\n    },[])\n\n    const [randomMeme, setRandomMeme] = React.useState({\n        topText: \"\",\n        bottomText:\"\",\n        randomImg: \"\"\n    })\n\n    function handleClick(){\n        const randomIndex = Math.floor(Math.random()*memes.length)\n        setRandomMeme(prevState=>( {...prevState, randomImg: memes[randomIndex].url}))\n    }\n\n    const[formData, setFormData] = React.useState({\n        topText:\"\",\n        bottomText:\"\"\n    });\n    function handleChange(event){\n        const {name, value} = event.target\n        setFormData(prevFormData=>{\n            return {\n                ...prevFormData, \n                [name]: value\n            }\n        })\n    }\n    \n    return(\n        <div className=\"main\"> \n        <input \n            className=\"text-input\" \n            name = \"topText\" type=\"text\" \n            placeholder=\"top text\" \n            onChange={handleChange}>\n        </input>  \n        <input \n            className=\"text-input\" \n            name = \"bottomText\" \n            type=\"text\" \n            placeholder=\"bottom text\" \n            onChange={handleChange}>\n        </input>\n        <button onClick={handleClick} className=\"button\">generate randome meme</button>\n        <div className=\"meme\">\n            <img className=\"meme\" src={randomMeme.randomImg} />\n            <h2 className=\"meme-top-text\">{formData.topText}</h2>\n            <h2 className=\"meme-bottom-text\">{formData.bottomText}</h2>\n        </div>\n\n       \n        </div>\n        \n    )\n}","/Users/alekseinesterov/WEB/Third/meme/MEME_generator/src/Components/Navbar.js",["35"],[],"import \"./Navbar.css\"\nimport logo from \"../Images/trollface.png\"\n\nexport default function Navbar(){\n    return(\n        <div className=\"nav\">\n            <img src={logo}></img>\n            <h1>Meme Generator</h1>\n        </div>\n    )\n}","/Users/alekseinesterov/WEB/Third/meme/MEME_generator/src/Components/Textarea.js",["36"],[],{"ruleId":"37","severity":1,"message":"38","line":59,"column":13,"nodeType":"39","endLine":59,"endColumn":64},{"ruleId":"37","severity":1,"message":"38","line":7,"column":13,"nodeType":"39","endLine":7,"endColumn":29},{"ruleId":"40","severity":1,"message":"41","line":3,"column":21,"nodeType":"42","messageId":"43","endLine":3,"endColumn":34},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'DraggableCore' is defined but never used.","Identifier","unusedVar"]