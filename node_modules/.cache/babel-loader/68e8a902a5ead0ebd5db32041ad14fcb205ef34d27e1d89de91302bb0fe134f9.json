{"ast":null,"code":"import _defineProperty from\"/Users/alekseinesterov/WEB/Third/meme/MEME_generator/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/alekseinesterov/WEB/Third/meme/MEME_generator/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"/Users/alekseinesterov/WEB/Third/meme/MEME_generator/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/alekseinesterov/WEB/Third/meme/MEME_generator/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/alekseinesterov/WEB/Third/meme/MEME_generator/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import\"./Form.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Form(){var _React$useState=React.useState([]),_React$useState2=_slicedToArray(_React$useState,2),memes=_React$useState2[0],setMemes=_React$useState2[1];React.useEffect(function(){var fetchMemes=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('https://api.imgflip.com/get_memes');case 2:response=_context.sent;_context.next=5;return response.json();case 5:data=_context.sent;setMemes(data.data.memes);case 7:case\"end\":return _context.stop();}},_callee);}));return function fetchMemes(){return _ref.apply(this,arguments);};}();fetchMemes();},[]);var _React$useState3=React.useState({topText:\"\",bottomText:\"\",randomImg:\"\"}),_React$useState4=_slicedToArray(_React$useState3,2),randomMeme=_React$useState4[0],setRandomMeme=_React$useState4[1];function handleClick(){var randomIndex=Math.floor(Math.random()*memes.length);setRandomMeme(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{randomImg:memes[randomIndex].url});});}var _React$useState5=React.useState({topText:\"\",bottomText:\"\"}),_React$useState6=_slicedToArray(_React$useState5,2),formData=_React$useState6[0],setFormData=_React$useState6[1];function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setFormData(function(prevFormData){return _objectSpread(_objectSpread({},prevFormData),{},_defineProperty({},name,value));});}return/*#__PURE__*/_jsxs(\"div\",{className:\"main\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"text-input\",name:\"topText\",type:\"text\",placeholder:\"top text\",onChange:handleChange}),/*#__PURE__*/_jsx(\"input\",{className:\"text-input\",name:\"bottomText\",type:\"text\",placeholder:\"bottom text\",onChange:handleChange}),/*#__PURE__*/_jsx(\"button\",{onClick:handleClick,className:\"button\",children:\"generate randome meme\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"meme\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"meme\",src:randomMeme.randomImg}),/*#__PURE__*/_jsx(\"h2\",{className:\"meme-top-text\",children:formData.topText}),/*#__PURE__*/_jsx(\"h2\",{className:\"meme-bottom-text\",children:formData.bottomText})]})]});}","map":{"version":3,"names":["React","Form","useState","memes","setMemes","useEffect","fetchMemes","fetch","response","json","data","topText","bottomText","randomImg","randomMeme","setRandomMeme","handleClick","randomIndex","Math","floor","random","length","prevState","url","formData","setFormData","handleChange","event","target","name","value","prevFormData"],"sources":["/Users/alekseinesterov/WEB/Third/meme/MEME_generator/src/Components/Form.js"],"sourcesContent":["import React from \"react\"\nimport \"./Form.css\"\n\nexport default function Form(){\n\n    const [memes, setMemes] = React.useState([]);\n    \n    React.useEffect(()=>{\n        const fetchMemes = async ()=>{\n            const response = await fetch('https://api.imgflip.com/get_memes')\n            const data = await response.json()\n            setMemes(data.data.memes)\n        }\n        fetchMemes()\n    },[])\n\n    const [randomMeme, setRandomMeme] = React.useState({\n        topText: \"\",\n        bottomText:\"\",\n        randomImg: \"\"\n    })\n\n    function handleClick(){\n        const randomIndex = Math.floor(Math.random()*memes.length)\n        setRandomMeme(prevState=>( {...prevState, randomImg: memes[randomIndex].url}))\n    }\n\n    const[formData, setFormData] = React.useState({\n        topText:\"\",\n        bottomText:\"\"\n    });\n    function handleChange(event){\n        const {name, value} = event.target\n        setFormData(prevFormData=>{\n            return {\n                ...prevFormData, \n                [name]: value\n            }\n        })\n    }\n    \n    return(\n        <div className=\"main\"> \n        <input \n            className=\"text-input\" \n            name = \"topText\" type=\"text\" \n            placeholder=\"top text\" \n            onChange={handleChange}>\n        </input>  \n        <input \n            className=\"text-input\" \n            name = \"bottomText\" \n            type=\"text\" \n            placeholder=\"bottom text\" \n            onChange={handleChange}>\n        </input>\n        <button onClick={handleClick} className=\"button\">generate randome meme</button>\n        <div className=\"meme\">\n            <img className=\"meme\" src={randomMeme.randomImg} />\n            <h2 className=\"meme-top-text\">{formData.topText}</h2>\n            <h2 className=\"meme-bottom-text\">{formData.bottomText}</h2>\n        </div>\n\n       \n        </div>\n        \n    )\n}"],"mappings":"msBAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,MAAO,YAAY,yFAEnB,cAAe,SAASC,KAAI,EAAE,CAE1B,oBAA0BD,KAAK,CAACE,QAAQ,CAAC,EAAE,CAAC,oDAArCC,KAAK,qBAAEC,QAAQ,qBAEtBJ,KAAK,CAACK,SAAS,CAAC,UAAI,CAChB,GAAMC,WAAU,4FAAG,4KACQC,MAAK,CAAC,mCAAmC,CAAC,QAA3DC,QAAQ,qCACKA,SAAQ,CAACC,IAAI,EAAE,QAA5BC,IAAI,eACVN,QAAQ,CAACM,IAAI,CAACA,IAAI,CAACP,KAAK,CAAC,sDAC5B,kBAJKG,WAAU,0CAIf,CACDA,UAAU,EAAE,CAChB,CAAC,CAAC,EAAE,CAAC,CAEL,qBAAoCN,KAAK,CAACE,QAAQ,CAAC,CAC/CS,OAAO,CAAE,EAAE,CACXC,UAAU,CAAC,EAAE,CACbC,SAAS,CAAE,EACf,CAAC,CAAC,qDAJKC,UAAU,qBAAEC,aAAa,qBAMhC,QAASC,YAAW,EAAE,CAClB,GAAMC,YAAW,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,CAACjB,KAAK,CAACkB,MAAM,CAAC,CAC1DN,aAAa,CAAC,SAAAO,SAAS,wCAAQA,SAAS,MAAET,SAAS,CAAEV,KAAK,CAACc,WAAW,CAAC,CAACM,GAAG,IAAE,CAAC,CAClF,CAEA,qBAA+BvB,KAAK,CAACE,QAAQ,CAAC,CAC1CS,OAAO,CAAC,EAAE,CACVC,UAAU,CAAC,EACf,CAAC,CAAC,qDAHIY,QAAQ,qBAAEC,WAAW,qBAI3B,QAASC,aAAY,CAACC,KAAK,CAAC,CACxB,kBAAsBA,KAAK,CAACC,MAAM,CAA3BC,IAAI,eAAJA,IAAI,CAAEC,KAAK,eAALA,KAAK,CAClBL,WAAW,CAAC,SAAAM,YAAY,CAAE,CACtB,sCACOA,YAAY,wBACdF,IAAI,CAAGC,KAAK,GAErB,CAAC,CAAC,CACN,CAEA,mBACI,aAAK,SAAS,CAAC,MAAM,wBACrB,cACI,SAAS,CAAC,YAAY,CACtB,IAAI,CAAG,SAAS,CAAC,IAAI,CAAC,MAAM,CAC5B,WAAW,CAAC,UAAU,CACtB,QAAQ,CAAEJ,YAAa,EACnB,cACR,cACI,SAAS,CAAC,YAAY,CACtB,IAAI,CAAG,YAAY,CACnB,IAAI,CAAC,MAAM,CACX,WAAW,CAAC,aAAa,CACzB,QAAQ,CAAEA,YAAa,EACnB,cACR,eAAQ,OAAO,CAAEV,WAAY,CAAC,SAAS,CAAC,QAAQ,UAAC,uBAAqB,EAAS,cAC/E,aAAK,SAAS,CAAC,MAAM,wBACjB,YAAK,SAAS,CAAC,MAAM,CAAC,GAAG,CAAEF,UAAU,CAACD,SAAU,EAAG,cACnD,WAAI,SAAS,CAAC,eAAe,UAAEW,QAAQ,CAACb,OAAO,EAAM,cACrD,WAAI,SAAS,CAAC,kBAAkB,UAAEa,QAAQ,CAACZ,UAAU,EAAM,GACzD,GAGA,CAGd"},"metadata":{},"sourceType":"module","externalDependencies":[]}