{"ast":null,"code":"var _jsxFileName = \"/Users/alekseinesterov/WEB/Third/meme/src/Components/Form.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./Form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n  const [memes, setMemes] = React.useState([]);\n  React.useEffect(() => {\n    const fetchMemes = async () => {\n      const response = await fetch('https://api.imgflip.com/get_memes');\n      const data = await response.json();\n      setMemes(data.data.memes);\n    };\n    fetchMemes();\n  }, []);\n  const [randomMeme, setRandomMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImg: \"\"\n  });\n  function handleClick() {\n    const randomIndex = Math.floor(Math.random() * memes.length);\n    setRandomMeme(prevState => ({\n      ...prevState,\n      randomImg: memes[randomIndex].url\n    }));\n  }\n  console.log(\"xxx\");\n  console.log(memes[0]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"text-input\",\n      type: \"text\",\n      placeholder: \"top text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"text-input\",\n      type: \"text\",\n      placeholder: \"bottom text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      className: \"button\",\n      children: \"generate new meme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"meme\",\n      src: randomMeme.url,\n      alt: randomMeme.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(Form, \"HICl0++CQmamjUxnldIFR67MZkI=\");\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","Form","memes","setMemes","useState","useEffect","fetchMemes","response","fetch","data","json","randomMeme","setRandomMeme","topText","bottomText","randomImg","handleClick","randomIndex","Math","floor","random","length","prevState","url","console","log","name"],"sources":["/Users/alekseinesterov/WEB/Third/meme/src/Components/Form.js"],"sourcesContent":["import React from \"react\";\nimport \"./Form.css\"\n\nexport default function Form(){\n\n    const [memes, setMemes] = React.useState([]);\n    \n    React.useEffect(()=>{\n        const fetchMemes = async ()=>{\n            const response = await fetch('https://api.imgflip.com/get_memes')\n            const data = await response.json()\n            setMemes(data.data.memes)\n        }\n        fetchMemes()\n    },[])\n\n    const [randomMeme, setRandomMeme] = React.useState({\n        topText: \"\",\n        bottomText:\"\",\n        randomImg: \"\"\n\n    })\n\n    function handleClick(){\n        const randomIndex = Math.floor(Math.random()*memes.length)\n        setRandomMeme(prevState=>( {...prevState, randomImg: memes[randomIndex].url}))\n    }\n    console.log(\"xxx\")\n    console.log(memes[0])\n    \n    \n\n    return(\n        <div className=\"main\"> \n        <input className=\"text-input\" type=\"text\" placeholder=\"top text\"></input>  \n        <input className=\"text-input\" type=\"text\" placeholder=\"bottom text\"></input>\n        <button onClick={handleClick} className=\"button\">generate new meme</button>\n        <img className=\"meme\" src={randomMeme.url} alt={randomMeme.name}></img>\n        </div>\n        \n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AAAA;AAEnB,eAAe,SAASC,IAAI,GAAE;EAAA;EAE1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,KAAK,CAACI,QAAQ,CAAC,EAAE,CAAC;EAE5CJ,KAAK,CAACK,SAAS,CAAC,MAAI;IAChB,MAAMC,UAAU,GAAG,YAAU;MACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;MACjE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAClCP,QAAQ,CAACM,IAAI,CAACA,IAAI,CAACP,KAAK,CAAC;IAC7B,CAAC;IACDI,UAAU,EAAE;EAChB,CAAC,EAAC,EAAE,CAAC;EAEL,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGZ,KAAK,CAACI,QAAQ,CAAC;IAC/CS,OAAO,EAAE,EAAE;IACXC,UAAU,EAAC,EAAE;IACbC,SAAS,EAAE;EAEf,CAAC,CAAC;EAEF,SAASC,WAAW,GAAE;IAClB,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAClB,KAAK,CAACmB,MAAM,CAAC;IAC1DT,aAAa,CAACU,SAAS,KAAI;MAAC,GAAGA,SAAS;MAAEP,SAAS,EAAEb,KAAK,CAACe,WAAW,CAAC,CAACM;IAAG,CAAC,CAAC,CAAC;EAClF;EACAC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;EAClBD,OAAO,CAACC,GAAG,CAACvB,KAAK,CAAC,CAAC,CAAC,CAAC;EAIrB,oBACI;IAAK,SAAS,EAAC,MAAM;IAAA,wBACrB;MAAO,SAAS,EAAC,YAAY;MAAC,IAAI,EAAC,MAAM;MAAC,WAAW,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAS,eACzE;MAAO,SAAS,EAAC,YAAY;MAAC,IAAI,EAAC,MAAM;MAAC,WAAW,EAAC;IAAa;MAAA;MAAA;MAAA;IAAA,QAAS,eAC5E;MAAQ,OAAO,EAAEc,WAAY;MAAC,SAAS,EAAC,QAAQ;MAAA,UAAC;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAS,eAC3E;MAAK,SAAS,EAAC,MAAM;MAAC,GAAG,EAAEL,UAAU,CAACY,GAAI;MAAC,GAAG,EAAEZ,UAAU,CAACe;IAAK;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QACjE;AAGd;AAAC,GAtCuBzB,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}