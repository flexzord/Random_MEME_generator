{"ast":null,"code":"var _jsxFileName = \"/Users/alekseinesterov/WEB/Third/meme/src/Components/Textarea.js\";\nimport React from \"react\";\nimport \"./Form.css\";\nimport Draggable, { DraggableCore } from \"react-draggable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Textarea(props) {\n  // const [textareaPosition, setTextareaPosition] = React.useState({\n  //     posX:0,\n  //     posY:50,\n  //     dragging:false\n  // })\n\n  // function handleMouseDown(event){\n\n  //     setTextareaPosition(privState=>({\n  //         ...privState,\n  //         dragging:true\n  //     }))\n  // }\n\n  // function handleMouseUp(event){\n  //     console.log(event.clientX)\n  //     setTextareaPosition(privState=>({\n  //         ...privState,\n  //         dragging:false\n  //     }))\n  // }\n\n  // function handleMouseMove(event){\n  //     if(textareaPosition.dragging){\n  //         const dx = event.clientX - textareaPosition.posX;\n  //         const dy = event.clientY - textareaPosition.posY;\n\n  //         setTextareaPosition(privState=>({\n  //             ...privState,\n  //             posX:event.clientX,\n  //             posY:event.clientY\n  //         }))\n  //         //event.target.style.top = `${event.target.offsetTop + dy}px`\n  //         //event.target.style.left = `${event.target.offsetLeft + dx}px`\n  //     }\n  // }\n\n  console.log(textareaPosition.dragging);\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: props.text,\n      className: \"top-text\",\n      readOnly: true\n      //style={{ position: 'absolute', top: `${textareaPosition.posY}px`, left: `${textareaPosition.posX}px` }}\n      // onMouseDown={handleMouseDown}\n      // onMouseUp={handleMouseUp}\n      // onMouseMove={handleMouseMove}\n      ,\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 13\n  }, this);\n}\n_c = Textarea;\nvar _c;\n$RefreshReg$(_c, \"Textarea\");","map":{"version":3,"names":["React","Draggable","DraggableCore","Textarea","props","console","log","textareaPosition","dragging","text"],"sources":["/Users/alekseinesterov/WEB/Third/meme/src/Components/Textarea.js"],"sourcesContent":["import React from \"react\"\nimport \"./Form.css\"\nimport Draggable, { DraggableCore } from \"react-draggable\"\n\nexport default function Textarea(props) {\n    // const [textareaPosition, setTextareaPosition] = React.useState({\n    //     posX:0,\n    //     posY:50,\n    //     dragging:false\n    // })\n    \n    // function handleMouseDown(event){\n        \n    //     setTextareaPosition(privState=>({\n    //         ...privState,\n    //         dragging:true\n    //     }))\n    // }\n\n    // function handleMouseUp(event){\n    //     console.log(event.clientX)\n    //     setTextareaPosition(privState=>({\n    //         ...privState,\n    //         dragging:false\n    //     }))\n    // }\n\n    // function handleMouseMove(event){\n    //     if(textareaPosition.dragging){\n    //         const dx = event.clientX - textareaPosition.posX;\n    //         const dy = event.clientY - textareaPosition.posY;\n            \n    //         setTextareaPosition(privState=>({\n    //             ...privState,\n    //             posX:event.clientX,\n    //             posY:event.clientY\n    //         }))\n    //         //event.target.style.top = `${event.target.offsetTop + dy}px`\n    //         //event.target.style.left = `${event.target.offsetLeft + dx}px`\n    //     }\n    // }\n\n    console.log(textareaPosition.dragging)\n        return(\n            <Draggable>\n            <textarea value={props.text} className=\"top-text\" readOnly\n            //style={{ position: 'absolute', top: `${textareaPosition.posY}px`, left: `${textareaPosition.posX}px` }}\n            // onMouseDown={handleMouseDown}\n            // onMouseUp={handleMouseUp}\n            // onMouseMove={handleMouseMove}\n            > </textarea>\n            </Draggable>\n            \n        )\n    }\n\n\n\n\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AACnB,OAAOC,SAAS,IAAIC,aAAa,QAAQ,iBAAiB;AAAA;AAE1D,eAAe,SAASC,QAAQ,CAACC,KAAK,EAAE;EACpC;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAC,OAAO,CAACC,GAAG,CAACC,gBAAgB,CAACC,QAAQ,CAAC;EAClC,oBACI,QAAC,SAAS;IAAA,uBACV;MAAU,KAAK,EAAEJ,KAAK,CAACK,IAAK;MAAC,SAAS,EAAC,UAAU;MAAC,QAAQ;MAC1D;MACA;MACA;MACA;MAAA;MAAA,UACC;IAAC;MAAA;MAAA;MAAA;IAAA;EAAW;IAAA;IAAA;IAAA;EAAA,QACD;AAGpB;AAAC,KAlDmBN,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}